<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro" >

<!-- body value -->
<xacro:property name="base_length" value="0.45" />
<xacro:property name="base_width" value="0.32" />
<xacro:property name="base_hight" value="0.19" />

<!-- Wheel values -->
<xacro:property name="wheel_r" value="0.051" />
<xacro:property name="wheel_length" value="0.046" />
<xacro:property name="wheel_margin" value="0.015" />

<!-- Lidar values  -->
<xacro:property name="lidar_r" value="0.025" />
<xacro:property name="lidar_l" value="0.0215" />

<xacro:property name="r200_cam_rgb_px" value="0.005"/>
<xacro:property name="r200_cam_rgb_py" value="0"/>
<xacro:property name="r200_cam_rgb_pz" value="0.013"/>
<xacro:property name="r200_cam_depth_offset" value="0.01"/>


<link name="base_footprint">
</link>

<link name="base_link">
  <visual>
    <geometry>
      <mesh filename="package://turtlebot5/meshes/body.stl"/>
    </geometry>
      <origin xyz="0.0 0.0 ${base_hight/2.0}" rpy="0.0 0.0 0.0"/>
      <material name="green"/>
  </visual>
  <collision>
    <geometry>
       <box size="${base_length} ${base_width} ${base_hight}"/>
    </geometry>
      <origin xyz="0.0 0.0 ${base_hight/2.0}" rpy="0.0 0.0 0.0"/>
  </collision>

  <xacro:box_inertia m="5.0" l="${2*base_length}" w="${2*base_width}" h="${2*base_hight}" xyz="0.0 0.0 ${base_hight/2.0}" rpy="0.0 0.0 0.0"/>
</link>

<link name="platform_lift_link">
  <visual>
    <origin xyz="0.0 0.0 0.0" rpy="0 0.0 0.0"/>
    <geometry>
        <mesh filename="package://turtlebot5/meshes/inner.stl"/>
    </geometry>
    <material name="grey"/>
  </visual> 
  <!-- <collision>
      <origin xyz="0.0 0.0 ${0.18/2}" rpy="0.0 0.0 0.0"/>
    <geometry>
        <cylinder radius="${0.05}" length="${0.18}"/>
    </geometry>
    <material name="red"/>
  </collision>    -->
  <xacro:cylinder_inertia m="1.0" r="${2*wheel_r}" h="${2*wheel_length}" xyz="0.0 0.0 ${0.18/2}" rpy="0.0 0.0 0.0" />
</link>

<link name="platform_link">
  <visual>
    <geometry>
        <mesh filename="package://turtlebot5/meshes/plateform.stl"/>
    </geometry>
      <origin xyz="0.0 0.0 0" rpy="0.0 0.0 0.0"/>
      <material name="green"/>
  </visual>
  <collision>
    <geometry>
      <box size="0.35 0.22 0.026"/>
    </geometry>
      <origin xyz="0.0 0.0 0" rpy="0.0 0.0 0.0"/>
  </collision>

  <xacro:box_inertia m="5.0" l="0.35" w="0.22" h="0.026" xyz="0.0 0.0 0" rpy="0.0 0.0 0.0"/>
</link>

<link name="base_scan">
    <visual name="">
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <geometry>
            <mesh filename="package://turtlebot5/meshes/lds.stl" scale="0.0005 0.0005 0.0005"/>
        </geometry>
        <material name="white" />
    </visual>
    <collision>
          <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <geometry>
            <cylinder radius="${lidar_r}" length="${lidar_l}"/>
        </geometry>
    </collision>
</link>

<link name="wheel_left_link">
  <visual>
    <origin xyz="0.0 0.0 0.0" rpy="${pi / 2.0} 0.0 0.0"/>
    <geometry>
        <mesh filename="package://turtlebot5/meshes/wheelR.stl"/>
    </geometry>
    <material name="grey"/>
  </visual> 
  <collision>
      <origin xyz="0.0 0.0 0.0" rpy="${pi / 2.0} 0.0 0.0"/>
    <geometry>
        <cylinder radius="${wheel_r}" length="${wheel_length}"/>
    </geometry>
  </collision>   
  <xacro:cylinder_inertia m="1.0" r="${2*wheel_r}" h="${2*wheel_length}" xyz="0.0 0.0 0.0" rpy="${pi / 2.0} 0.0 0.0" />
</link>

<link name="wheel_right_link">
  <visual>
      <origin xyz="0.0 0.0 0.0" rpy="${pi / 2.0} 0.0 0.0"/>
      <geometry>
          <mesh filename="package://turtlebot5/meshes/wheelL.stl"/>
      </geometry>
      <material name="grey"/>
  </visual>    
  <collision>
      <origin xyz="0.0 0.0 0.0" rpy="${pi / 2.0} 0.0 0.0"/>
      <geometry>
          <cylinder radius="${wheel_r}" length="${wheel_length}"/>
      </geometry>
  </collision>
  <xacro:cylinder_inertia m="1.0" r="${2*wheel_r}" h="${2*wheel_length}" xyz="0.0 0.0 0.0" rpy="${pi / 2.0} 0.0 0.0" />
</link>

<link name="caster_link_f">
  <visual>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
          <sphere radius="${wheel_r / 2.0}"/>
      </geometry>
      <material name="grey"/>
  </visual>
  <collision>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
          <sphere radius="${wheel_r / 2.0}"/>
      </geometry> 
  </collision>
  <xacro:sphere_inertia m="0.5" r="${2*wheel_r / 2.0}" xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
</link>

<link name="caster_link_b">
  <visual>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
          <sphere radius="${wheel_r / 2.0}"/>
      </geometry>
      <material name="grey"/>
  </visual>
  <collision>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
          <sphere radius="${wheel_r / 2.0}"/>
      </geometry> 
  </collision>
  <xacro:sphere_inertia m="0.5" r="${2*wheel_r / 2.0}" xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
</link>

<link name="camera_link">
  <visual>
   <origin xyz="0.0 0.0 0.0" rpy="1.57 0 1.57"/>
    <geometry>
      <box size="0.025 0.025 0.025"/>
    </geometry>
    <material name="grey"/>
  </visual>
</link>
<link name="camera_link_2">
    <!-- <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <box size="0.025 0.025 0.025"/>
        </geometry>
    </visual> -->
    <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <box size="0.025 0.025 0.025"/>
        </geometry>
    </collision>
</link>
<link name="camera_left">
  <visual>
   <origin xyz="0.0 0.0 0.0" rpy="1.57 0 1.57"/>
    <geometry>
      <box size="0.025 0.025 0.025"/>
    </geometry>
    <material name="grey"/>
  </visual>
</link>
<link name="camera_right">
  <visual>
   <origin xyz="0.0 0.0 0.0" rpy="1.57 0 1.57"/>
    <geometry>
      <box size="0.025 0.025 0.025"/>
    </geometry>
    <material name="grey"/>
  </visual>
</link>
<!-- ####################################################################################################################### -->
<!-- ####################################################################################################################### -->
<!-- #####################################################   JOINTS   ###################################################### -->                            
<!-- ####################################################################################################################### -->
<!-- ####################################################################################################################### -->

<joint name="base_joint" type="fixed">
    <origin xyz="0.0 0.0 ${wheel_r}" rpy="0.0 0.0 0.0"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
</joint>

<joint name="platform_joint" type="fixed">
    <origin xyz="0.0 0.0 ${base_hight}" rpy="0.0 0.0 0.0"/>
    <parent link="platform_lift_link"/>
    <child link="platform_link"/>
</joint>

<joint name="platform_lift_joint" type="prismatic">
    <origin xyz="0.0005 0.0 0.0" rpy="0.0 0.0 0.0"/>
    <parent link="base_link"/>
    <child link="platform_lift_link"/>
    <axis xyz="0 0 1"/> <!-- Movement along the Z-axis -->
    <limit lower="0.04" upper="${(base_hight * 0.87)}" effort="2500" velocity="1.0"/> <!-- Motion range and limits -->
</joint>

<joint name="base_lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_scan"/>
    <origin xyz="${(base_length / 2)- lidar_r} 0.0 ${(base_hight + lidar_l / 2) - 0.005}" rpy="0.0 0.0 0.0"/>        
</joint>

<joint name="wheel_left_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_left_link"/>
    <origin xyz="0 ${(base_width - wheel_length + wheel_margin)/2.0} 0.0" rpy="0.0 0.0 0.0"/>
    <axis xyz="0 1 0.0"/>
</joint>

<joint name="wheel_right_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_right_link"/>
    <origin xyz=" 0 ${-(base_width - wheel_length + wheel_margin)/2.0} 0.0" rpy="0.0 0.0 0.0"/>
    <axis xyz="0 1 0.0"/>
</joint>

<joint name="caster_joint_f" type="fixed">
    <origin xyz="${base_length/3.0} 0.0 ${-(wheel_r / 2.0)}" rpy="0.0 0.0 0.0"/>
    <parent link="base_link"/>
    <child link="caster_link_f"/>
</joint>

<joint name="caster_joint_b" type="fixed">
    <origin xyz="${-base_length/3.0} 0.0 ${-(wheel_r / 2.0)}" rpy="0.0 0.0 0.0"/>
    <parent link="base_link"/>
    <child link="caster_link_b"/>
</joint>

<joint name="camera_joint" type="fixed">
  <parent link="base_link"/>
  <child link="camera_link"/>
  <origin xyz="${(base_length/2) + 0.009} 0 ${0.094 + 0.05209 - (base_hight/2.0)}" rpy="0 0 0"/>
</joint>

<joint name="camera_rgb_joint" type="fixed">
  <origin xyz="0 0 ${r200_cam_rgb_pz}" rpy="0 1.05 0"/>
  <parent link="camera_link"/>
  <child link="camera_rgb_frame"/>
</joint>
<link name="camera_rgb_frame"/>
<joint name="camera_rgb_optical_joint" type="fixed">
  <origin xyz="0 0 0" rpy="-1.57 0 -1.57"/>
  <parent link="camera_rgb_frame"/>
  <child link="camera_rgb_optical_frame"/>
</joint>
<link name="camera_rgb_optical_frame"/>

<joint name="camera_depth_joint" type="fixed">
  <origin xyz="${r200_cam_rgb_px} ${r200_cam_rgb_py + r200_cam_depth_offset} ${r200_cam_rgb_pz}" rpy="0 0 0"/>
  <parent link="camera_link"/>
  <child link="camera_depth_frame"/>
</joint>
<link name="camera_depth_frame"/>

<joint name="camera_depth_optical_joint" type="fixed">
  <origin xyz="0 0 0" rpy="-1.57 0 -1.57"/>
  <parent link="camera_depth_frame"/>
  <child link="camera_depth_optical_frame"/>
</joint>
<link name="camera_depth_optical_frame"/>

<joint name="camera_joint_2" type="fixed">
  <parent link="base_link"/>
  <child link="camera_link_2"/>
  <origin xyz="${(base_length/2) + 0.09} ${r200_cam_rgb_py + (0.098/2)} 0.098" rpy="0 0.5 0"/> <!-- Adjusted rpy to face the ground -->
</joint>

<joint name="camera_left_joint" type="fixed">
  <parent link="base_link"/>
  <child link="camera_left"/>
  <origin xyz="0 ${(base_width)/2.0} ${0.12 + 0.05209 - (base_hight/2.0)}" rpy="0 1.05 1.5708"/> <!-- Adjusted rpy to face the ground -->
</joint>

<joint name="camera_right_joint" type="fixed">
  <parent link="base_link"/>
  <child link="camera_right"/>
  <origin xyz="0 ${-(base_width)/2.0} ${0.12 + 0.05209 - (base_hight/2.0)}" rpy="0 1.05 -1.5708"/> <!-- Adjusted rpy to face the ground -->
</joint>
</robot>